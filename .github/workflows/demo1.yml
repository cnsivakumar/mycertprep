name: Events Demo 1
on: 
  push:
    branches: master
jobs:
  test:
    runs-on: ubuntu-latest
    container: 
      image: node:16
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: mycache-test-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Install lint
        run: npm install eslint

      - name: Lint Code
        run: npm run lint

      - name: Test Code
        id: run-tests
        run: npm run test

      - name: Print the test result
        if: failure() && steps.run-tests.outcome == 'failure'
        run: echo "Test failed in the previous step. Please validate"
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: mycache-test-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Install vite
        run: npm install vite

      - name: Build the code
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desg-files
          path: package.json
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
    with:
      mystring: 'Mexico'
  
  print-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Printing the output result
        run: echo ${{ needs.deploy.outputs.myoutput }}
        